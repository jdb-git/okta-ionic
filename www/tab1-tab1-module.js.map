{"version":3,"sources":["webpack:///./src/app/tab1/tab1.module.ts","webpack:///./src/app/tab1/tab1.page.html","webpack:///./src/app/tab1/tab1.page.scss","webpack:///./src/app/tab1/tab1.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA6C;AACE;AACN;AACM;AACF;AACN;AAWvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAQ,EAAE,CAAC,CAAC;aAC3D;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;AChB3B,gkCAAgkC,iBAAiB,2LAA2L,eAAe,0iC;;;;;;;;;;;ACA3xC,yCAAyC,qBAAqB,qBAAqB,EAAE,+CAA+C,mY;;;;;;;;;;;;;;;;;;;;;ACAlF;AACH;AACI;AAEM;AAOzD;IAKE,kBAAoB,OAAsB,EAAU,WAAwB;QAAxD,YAAO,GAAP,OAAO,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;IAC5E,CAAC;IAED,2BAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,UAAC,MAAM;YAC/C,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,MAAM,CAAC,MAAM,KAAK,yDAAW,CAAC,aAAa,IAAI,MAAM,CAAC,MAAM,KAAK,yDAAW,CAAC,iBAAiB,EAAE;gBAClG,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;iBAAM,IAAI,MAAM,CAAC,MAAM,KAAK,yDAAW,CAAC,cAAc,EAAE;gBACvD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0BAAO,GAAP;QACE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,yBAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,oBAAkB,KAAO,CAAC,EAAxC,CAAwC,CAAC,CAAC;IACrF,CAAC;IAEY,8BAAW,GAAxB;;;;;;wBACE,SAAI;wBAAY,qBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,EAAa;;wBAA/D,GAAK,QAAQ,GAAG,SAA+C,CAAC;;;;;KACjE;IA7BU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,sFAA6B;;SAE9B,CAAC;+EAM6B,4DAAa,EAAuB,8DAAW;OALjE,QAAQ,CA8BpB;IAAD,eAAC;CAAA;AA9BoB","file":"tab1-tab1-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Tab One\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card class=\\\"welcome-card\\\">\\n    <ion-img src=\\\"/assets/shapes.svg\\\"></ion-img>\\n    <ion-card-header>\\n      <ion-card-subtitle>Get Started</ion-card-subtitle>\\n      <ion-card-title>Welcome to Ionic</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <p>Now that your app has been created, you'll want to start building out features and components. Check out some of the resources below for next steps.</p>\\n      <ion-button margin-top (click)=\\\"signIn()\\\" *ngIf=\\\"!authenticated\\\">Login</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card *ngIf=\\\"authenticated\\\">\\n    <ion-card-header>\\n      <ion-button (click)=\\\"getUserInfo()\\\">Get User Details</ion-button>\\n      <ion-button (click)=\\\"signOut()\\\">Sign Out</ion-button>\\n    </ion-card-header>\\n\\n    <ion-card *ngIf=\\\"userInfo\\\">\\n      <ion-card-header>\\n        User Info\\n      </ion-card-header>\\n      <ion-card-content>\\n        {{userInfo | json}}\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-card *ngIf=\\\"action\\\">\\n      <ion-card-header>\\n        Action Data\\n      </ion-card-header>\\n      <ion-card-content>\\n        {{action | json}}\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-card>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-list-header>\\n      <ion-label>Resources</ion-label>\\n    </ion-list-header>\\n    <ion-item href=\\\"https://ionicframework.com/docs/\\\">\\n      <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"book\\\"></ion-icon>\\n      <ion-label>Ionic Documentation</ion-label>\\n    </ion-item>\\n    <ion-item href=\\\"https://ionicframework.com/docs/building/scaffolding\\\">\\n      <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"build\\\"></ion-icon>\\n      <ion-label>Scaffold Out Your App</ion-label>\\n    </ion-item>\\n    <ion-item href=\\\"https://ionicframework.com/docs/layout/structure\\\">\\n      <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"grid\\\"></ion-icon>\\n      <ion-label>Change Your App Layout</ion-label>\\n    </ion-item>\\n    <ion-item href=\\\"https://ionicframework.com/docs/theming/basics\\\">\\n      <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"color-fill\\\"></ion-icon>\\n      <ion-label>Theme Your App</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \".welcome-card ion-img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb2JpbGVkZXYvcHJvamVjdHMvaW9uaWMtbG9naW4vc3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdGFiMS90YWIxLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWxjb21lLWNhcmQgaW9uLWltZyB7XG4gIG1heC1oZWlnaHQ6IDM1dmg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { AuthService } from '../auth/auth.service';\nimport { IUserInfo } from '../auth/user-info.model';\nimport { AuthActions, IAuthAction } from 'ionic-appauth';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page implements OnInit {\n  userInfo: IUserInfo;\n  action: IAuthAction;\n  authenticated: boolean;\n\n  constructor(private navCtrl: NavController, private authService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.authService.authObservable.subscribe((action) => {\n      this.action = action;\n      if (action.action === AuthActions.SignInSuccess || action.action === AuthActions.AuthSignInSuccess) {\n        this.authenticated = true;\n      } else if (action.action === AuthActions.SignOutSuccess) {\n        this.authenticated = false;\n      }\n    });\n  }\n\n  signOut() {\n    this.authService.signOut();\n  }\n\n  signIn() {\n    this.authService.signIn().catch(error => console.error(`Sign in error: ${error}`));\n  }\n\n  public async getUserInfo(): Promise<void> {\n    this.userInfo = await this.authService.getUserInfo<IUserInfo>();\n  }\n}\n"],"sourceRoot":""}